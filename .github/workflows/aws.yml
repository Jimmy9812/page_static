name: Docker Image LanguagePython

on:
  push:
    branches: [ "qa" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 1. Clonar el repositorio
    - name: Checkout Source
      uses: actions/checkout@v3

    # 2. Login en Docker Hub
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # 3. Construir la imagen Docker
    - name: Build the Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/language-python-app .

    # 4. Publicar la imagen en Docker Hub
    - name: Publish image to Docker Hub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/language-python-app:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    # 1. Clonar el repositorio
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2. Configurar clave SSH para acceso a EC2
    - name: Set up SSH key for EC2 access
      run: |
        echo "${{ secrets.EC2_SSH_KEY }}" > ec2_key.pem
        chmod 600 ec2_key.pem

    # 3. Configurar y desplegar en EC2 Instance 1
    - name: SSH into EC2 (Instance 1) and deploy
      run: |
        ssh -i ec2_key.pem -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_INSTANCE_IP_QA1 }} << 'EOF'
          # Actualizar sistema e instalar Docker si no está instalado
          sudo yum update -y
          if ! command -v docker &> /dev/null; then
            echo "Instalando Docker..."
            sudo yum install -y docker
            sudo systemctl start docker
            sudo systemctl enable docker
          fi

          # Detener y eliminar el contenedor anterior si existe
          sudo docker stop language-python-app || true
          sudo docker rm language-python-app || true

          # Descargar la nueva imagen y ejecutar el contenedor
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/language-python-app:latest
          sudo docker run -d --name language-python-app -p 80:80 ${{ secrets.DOCKER_USERNAME }}/language-python-app:latest
        EOF

    # 4. Configurar y desplegar en EC2 Instance 2
    - name: SSH into EC2 (Instance 2) and deploy
      run: |
        ssh -i ec2_key.pem -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_INSTANCE_IP_QA2 }} << 'EOF'
          # Actualizar sistema e instalar Docker si no está instalado
          sudo yum update -y
          if ! command -v docker &> /dev/null; then
            echo "Instalando Docker..."
            sudo yum install -y docker
            sudo systemctl start docker
            sudo systemctl enable docker
          fi

          # Detener y eliminar el contenedor anterior si existe
          sudo docker stop language-python-app || true
          sudo docker rm language-python-app || true

          # Descargar la nueva imagen y ejecutar el contenedor
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/language-python-app:latest
          sudo docker run -d --name language-python-app -p 80:80 ${{ secrets.DOCKER_USERNAME }}/language-python-app:latest
        EOF
